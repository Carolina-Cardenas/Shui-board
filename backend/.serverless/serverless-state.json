{
  "service": {
    "service": "shui-board",
    "serviceObject": {
      "name": "shui-board"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "eu-north-1",
      "iam": {
        "role": "arn:aws:iam::298156079429:role/carolinas-shui-board-role"
      },
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "http://localhost:5173"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ],
          "allowedHeaders": [
            "Content-Type",
            "Authorization"
          ],
          "allowCredentials": true
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateMessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/shui-board-dev-createMessage"
            }
          },
          "ListMessagesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/shui-board-dev-listMessages"
            }
          },
          "UpdateMessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/shui-board-dev-updateMessage"
            }
          },
          "CreateMessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
                "S3Key": "serverless/shui-board/dev/1759435672446-2025-10-02T20:07:52.446Z/shui-board-createMessage.zip"
              },
              "Handler": "functions/createMessage/index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "shui-board-dev-createMessage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": "arn:aws:iam::298156079429:role/carolinas-shui-board-role"
            },
            "DependsOn": [
              "CreateMessageLogGroup"
            ]
          },
          "ListMessagesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
                "S3Key": "serverless/shui-board/dev/1759435672446-2025-10-02T20:07:52.446Z/shui-board-listMessages.zip"
              },
              "Handler": "functions/listMessages/index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "shui-board-dev-listMessages",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": "arn:aws:iam::298156079429:role/carolinas-shui-board-role"
            },
            "DependsOn": [
              "ListMessagesLogGroup"
            ]
          },
          "UpdateMessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
                "S3Key": "serverless/shui-board/dev/1759435672446-2025-10-02T20:07:52.446Z/shui-board-updateMessage.zip"
              },
              "Handler": "functions/updateMessage/index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "shui-board-dev-updateMessage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": "arn:aws:iam::298156079429:role/carolinas-shui-board-role"
            },
            "DependsOn": [
              "UpdateMessageLogGroup"
            ]
          },
          "ListMessagesLambdaVersionDqvAPQOx0WfuV7FhzLWX2tR9LMTlwqkxOgvmGS7o4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListMessagesLambdaFunction"
              },
              "CodeSha256": "vDkfA2iHal2HgbgbajSwtAiypZg45qDw2deMVaOJyws="
            }
          },
          "CreateMessageLambdaVersionIu3rpIUvDGjyLI1vZohikcxUu8vFS667439Gy1LbE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateMessageLambdaFunction"
              },
              "CodeSha256": "v8ADHMDBgAUzCue/94lUQIuXexVroOCPnlWCDlx8HMQ="
            }
          },
          "UpdateMessageLambdaVersionz9ZOtNbxCmoLlgeuB4jXr9iAfGnEQoInDIPiq6F4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateMessageLambdaFunction"
              },
              "CodeSha256": "M+32EWHF4aSVHYG+IBd3W4BNgBbJ6TS+DmIUevZ2dDs="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-shui-board",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowCredentials": true,
                "AllowHeaders": [
                  "Content-Type",
                  "Authorization"
                ],
                "AllowMethods": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "AllowOrigins": [
                  "http://localhost:5173"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreateMessageLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateMessageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateMessage": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateMessageLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostMessages": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /messages",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateMessage"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateMessage"
          },
          "ListMessagesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListMessagesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationListMessages": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ListMessagesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMessages": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /messages",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationListMessages"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationListMessages"
          },
          "UpdateMessageLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateMessageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateMessage": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateMessageLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutMessagesIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /messages/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateMessage"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateMessage"
          },
          "MessagesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ShuiMessages",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "messageId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "messageId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "userIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "username",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
            "Export": {
              "Name": "sls-shui-board-dev-ServerlessDeploymentBucketName"
            }
          },
          "ListMessagesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListMessagesLambdaVersionDqvAPQOx0WfuV7FhzLWX2tR9LMTlwqkxOgvmGS7o4"
            },
            "Export": {
              "Name": "sls-shui-board-dev-ListMessagesLambdaFunctionQualifiedArn"
            }
          },
          "CreateMessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateMessageLambdaVersionIu3rpIUvDGjyLI1vZohikcxUu8vFS667439Gy1LbE"
            },
            "Export": {
              "Name": "sls-shui-board-dev-CreateMessageLambdaFunctionQualifiedArn"
            }
          },
          "UpdateMessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateMessageLambdaVersionz9ZOtNbxCmoLlgeuB4jXr9iAfGnEQoInDIPiq6F4"
            },
            "Export": {
              "Name": "sls-shui-board-dev-UpdateMessageLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-shui-board-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-shui-board-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "createMessage": {
        "handler": "functions/createMessage/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/messages",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/messages"
          }
        ],
        "name": "shui-board-dev-createMessage",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/Users/Carolina/Desktop/Folkuniversitet/Shui-board/backend/.serverless/build/shui-board-createMessage.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "CreateMessageLambdaVersionIu3rpIUvDGjyLI1vZohikcxUu8vFS667439Gy1LbE"
      },
      "listMessages": {
        "handler": "functions/listMessages/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/messages",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/messages"
          }
        ],
        "name": "shui-board-dev-listMessages",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/Users/Carolina/Desktop/Folkuniversitet/Shui-board/backend/.serverless/build/shui-board-listMessages.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ListMessagesLambdaVersionDqvAPQOx0WfuV7FhzLWX2tR9LMTlwqkxOgvmGS7o4"
      },
      "updateMessage": {
        "handler": "functions/updateMessage/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/messages/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/messages/{id}"
          }
        ],
        "name": "shui-board-dev-updateMessage",
        "environment": {
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "package": {
          "artifact": "/Users/Carolina/Desktop/Folkuniversitet/Shui-board/backend/.serverless/build/shui-board-updateMessage.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "UpdateMessageLambdaVersionz9ZOtNbxCmoLlgeuB4jXr9iAfGnEQoInDIPiq6F4"
      }
    },
    "resources": {
      "Resources": {
        "MessagesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ShuiMessages",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "messageId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "username",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "messageId",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "userIndex",
                "KeySchema": [
                  {
                    "AttributeName": "username",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "carolinak",
      "app": "cd",
      "service": "shui-board",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/shui-board/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
        "artifactDirectoryName": "serverless/shui-board/dev/1759435672446-2025-10-02T20:07:52.446Z"
      },
      "build": {
        "esbuild": {
          "minify": true
        }
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "cd",
    "appId": null,
    "org": "carolinak",
    "orgId": null,
    "build": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"build\"]"
    },
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/shui-board/dev/1759435672446-2025-10-02T20:07:52.446Z",
    "artifact": ""
  }
}