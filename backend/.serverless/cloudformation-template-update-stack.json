{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "CreateMessageLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/shui-board-dev-createMessage"
      }
    },
    "ListMessagesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/shui-board-dev-listMessages"
      }
    },
    "UpdateMessageLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/shui-board-dev-updateMessage"
      }
    },
    "CreateMessageLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
          "S3Key": "serverless/shui-board/dev/1759234753858-2025-09-30T12:19:13.858Z/shui-board-createMessage.zip"
        },
        "Handler": "functions/createMessage/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "shui-board-dev-createMessage",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::298156079429:role/carolinas-shui-board-role"
      },
      "DependsOn": [
        "CreateMessageLogGroup"
      ]
    },
    "ListMessagesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
          "S3Key": "serverless/shui-board/dev/1759234753858-2025-09-30T12:19:13.858Z/shui-board-listMessages.zip"
        },
        "Handler": "functions/listMessages/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "shui-board-dev-listMessages",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": "arn:aws:iam::298156079429:role/carolinas-shui-board-role"
      },
      "DependsOn": [
        "ListMessagesLogGroup"
      ]
    },
    "UpdateMessageLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
          "S3Key": "serverless/shui-board/dev/1759234753858-2025-09-30T12:19:13.858Z/shui-board-updateMessage.zip"
        },
        "Handler": "functions/updateMessage/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "shui-board-dev-updateMessage",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": "arn:aws:iam::298156079429:role/carolinas-shui-board-role"
      },
      "DependsOn": [
        "UpdateMessageLogGroup"
      ]
    },
    "CreateMessageLambdaVersionEQe0NO7Yk5Ia83XMdzV9CkalrOwQvf1b4pgQRrWlE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateMessageLambdaFunction"
        },
        "CodeSha256": "KUCyQbSl9JIuxowIy4rVhSy1UvyMr42yeDUki3wzGC0="
      }
    },
    "ListMessagesLambdaVersionbFmpOjm9w9pzr7fxsUscLxEIioToNNCYpY2nqqZr0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ListMessagesLambdaFunction"
        },
        "CodeSha256": "qeNLHhmrSQ2zOXi08KCDlmhFiArsdpCKNj262PhqbYw="
      }
    },
    "UpdateMessageLambdaVersionWhy3wKxYHnIKEec1VtCAKnqXNd1Rg2pfTxnMfP6AM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateMessageLambdaFunction"
        },
        "CodeSha256": "oTBex30je7dtO8RdrQVldXNHRTUaoQBeRMEeAf3RzII="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-shui-board",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "CreateMessageLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateMessageLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateMessage": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateMessageLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostMessages": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /messages",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateMessage"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCreateMessage"
    },
    "ListMessagesLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListMessagesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationListMessages": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "ListMessagesLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetMessages": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /messages",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationListMessages"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationListMessages"
    },
    "UpdateMessageLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateMessageLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateMessage": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateMessageLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePutMessagesIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /messages/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateMessage"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateMessage"
    },
    "MessagesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "ShuiMessages",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "messageId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "username",
            "AttributeType": "S"
          },
          {
            "AttributeName": "createdAt",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "messageId",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "userIndex",
            "KeySchema": [
              {
                "AttributeName": "username",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "createdAt",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-north-1-652ccfc2-b469",
      "Export": {
        "Name": "sls-shui-board-dev-ServerlessDeploymentBucketName"
      }
    },
    "CreateMessageLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateMessageLambdaVersionEQe0NO7Yk5Ia83XMdzV9CkalrOwQvf1b4pgQRrWlE"
      },
      "Export": {
        "Name": "sls-shui-board-dev-CreateMessageLambdaFunctionQualifiedArn"
      }
    },
    "ListMessagesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ListMessagesLambdaVersionbFmpOjm9w9pzr7fxsUscLxEIioToNNCYpY2nqqZr0"
      },
      "Export": {
        "Name": "sls-shui-board-dev-ListMessagesLambdaFunctionQualifiedArn"
      }
    },
    "UpdateMessageLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateMessageLambdaVersionWhy3wKxYHnIKEec1VtCAKnqXNd1Rg2pfTxnMfP6AM"
      },
      "Export": {
        "Name": "sls-shui-board-dev-UpdateMessageLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-shui-board-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-shui-board-dev-HttpApiUrl"
      }
    }
  }
}